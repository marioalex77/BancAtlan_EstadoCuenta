// <auto-generated />
using System;
using API_BancAtlan_EstadoCuenta.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_BancAtlan_EstadoCuenta.Migrations
{
    [DbContext(typeof(BancAtlanEstadoCuentaContext))]
    partial class BancAtlanEstadoCuentaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("genero")
                        .IsFixedLength();

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("nombres");

                    b.HasKey("IdCliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.EstadoCuentum", b =>
                {
                    b.Property<int>("IdEstadoCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado_cuenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCuenta"));

                    b.Property<int>("Anio")
                        .HasColumnType("int")
                        .HasColumnName("anio");

                    b.Property<decimal>("Disponible")
                        .HasColumnType("decimal(19, 2)")
                        .HasColumnName("disponible");

                    b.Property<DateTime>("FechaVtoPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_vto_pago");

                    b.Property<int>("IdTarjeta")
                        .HasColumnType("int")
                        .HasColumnName("id_tarjeta");

                    b.Property<int>("Mes")
                        .HasColumnType("int")
                        .HasColumnName("mes");

                    b.Property<decimal>("PagoMinimo")
                        .HasColumnType("decimal(19, 2)")
                        .HasColumnName("pago_minimo");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(19, 2)")
                        .HasColumnName("saldo");

                    b.HasKey("IdEstadoCuenta");

                    b.HasIndex("IdTarjeta");

                    b.ToTable("estado_cuenta");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Tarjetum", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tarjeta");

                    b.Property<int>("DiaCorteMes")
                        .HasColumnType("int")
                        .HasColumnName("dia_corte_mes");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<decimal>("Interes")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("interes");

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnType("decimal(19, 4)")
                        .HasColumnName("limite_credito");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("numero");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(19, 4)")
                        .HasColumnName("saldo");

                    b.Property<decimal>("SaldoMinimo")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("saldo_minimo");

                    b.HasKey("IdTarjeta");

                    b.ToTable("tarjeta");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.TipoTransaccion", b =>
                {
                    b.Property<int>("IdTipoTransaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_transaccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoTransaccion"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("concepto");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("valor")
                        .IsFixedLength();

                    b.HasKey("IdTipoTransaccion");

                    b.ToTable("tipo_transaccion");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Transaccion", b =>
                {
                    b.Property<int>("IdTransaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_transaccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransaccion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_movimiento");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_transaccion");

                    b.Property<int>("IdTarjeta")
                        .HasColumnType("int")
                        .HasColumnName("id_tarjeta");

                    b.Property<int>("IdTipoTransaccion")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_transaccion");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(19, 4)")
                        .HasColumnName("monto");

                    b.Property<string>("Signo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValue("D")
                        .HasColumnName("signo")
                        .IsFixedLength();

                    b.HasKey("IdTransaccion");

                    b.HasIndex("IdTarjeta");

                    b.HasIndex("IdTipoTransaccion");

                    b.ToTable("transaccion");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("correo");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("password");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.EstadoCuentum", b =>
                {
                    b.HasOne("API_BancAtlan_EstadoCuenta.Entities.Tarjetum", "IdTarjetaNavigation")
                        .WithMany("EstadoCuenta")
                        .HasForeignKey("IdTarjeta")
                        .IsRequired()
                        .HasConstraintName("FK_estado_cuenta_tarjeta");

                    b.Navigation("IdTarjetaNavigation");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Tarjetum", b =>
                {
                    b.HasOne("API_BancAtlan_EstadoCuenta.Entities.Cliente", "IdTarjetaNavigation")
                        .WithOne("Tarjetum")
                        .HasForeignKey("API_BancAtlan_EstadoCuenta.Entities.Tarjetum", "IdTarjeta")
                        .IsRequired()
                        .HasConstraintName("FK_tarjeta_cliente");

                    b.Navigation("IdTarjetaNavigation");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Transaccion", b =>
                {
                    b.HasOne("API_BancAtlan_EstadoCuenta.Entities.Tarjetum", "IdTarjetaNavigation")
                        .WithMany("Transaccions")
                        .HasForeignKey("IdTarjeta")
                        .IsRequired()
                        .HasConstraintName("FK_transaccion_tarjeta");

                    b.HasOne("API_BancAtlan_EstadoCuenta.Entities.TipoTransaccion", "IdTipoTransaccionNavigation")
                        .WithMany("Transaccions")
                        .HasForeignKey("IdTipoTransaccion")
                        .IsRequired()
                        .HasConstraintName("FK_transaccion_tipo_transaccion");

                    b.Navigation("IdTarjetaNavigation");

                    b.Navigation("IdTipoTransaccionNavigation");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Cliente", b =>
                {
                    b.Navigation("Tarjetum");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.Tarjetum", b =>
                {
                    b.Navigation("EstadoCuenta");

                    b.Navigation("Transaccions");
                });

            modelBuilder.Entity("API_BancAtlan_EstadoCuenta.Entities.TipoTransaccion", b =>
                {
                    b.Navigation("Transaccions");
                });
#pragma warning restore 612, 618
        }
    }
}
